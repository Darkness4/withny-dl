name: Contract Testing CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '**.go'
      - '**.c'
      - '**.h'
      - 'Dockerfile*'
      - '.github/workflows/contract-test.yaml'
      - 'go.*'
      - 'Makefile'
  pull_request:
    branches:
      - 'main'
      - 'release/*'
  schedule:
    - cron: '0 * * * *'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  test:
    name: Contract Test withny-dl
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download build-essential
        run: |
          sudo apt update -y
          sudo apt install -y build-essential libavformat-dev libavcodec-dev libavutil-dev

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: false
          cache-dependency-path: go.sum

      - name: Download all Go modules
        run: |
          go mod download

      - name: Fetch credentials
        env:
          WITHNY_ETCD_CA: ${{ secrets.WITHNY_ETCD_CA }}
          WITHNY_ETCD_CERT: ${{ secrets.WITHNY_ETCD_CERT }}
          WITHNY_ETCD_KEY: ${{ secrets.WITHNY_ETCD_KEY }}

        run: |
          mkdir -p /tmp/secrets
          chmod 0700 /tmp/secrets
          echo "$WITHNY_ETCD_CA" > /tmp/secrets/ca.crt
          echo "$WITHNY_ETCD_CERT" > /tmp/secrets/tls.crt
          echo "$WITHNY_ETCD_KEY" > /tmp/secrets/tls.key

      - name: Setup etcdctl
        run: |
          ETCD_VER=v3.5.21
          DOWNLOAD_URL=https://storage.googleapis.com/etcd
          curl -fsSL "${DOWNLOAD_URL}/${ETCD_VER}/etcd-${ETCD_VER}-linux-amd64.tar.gz" -o /tmp/etcd.tar.gz
          tar xvzf /tmp/etcd.tar.gz --strip-components=1 -C /tmp
          chmod +x /tmp/etcdctl || true

      - name: Restore secret
        env:
          WITHNY_ETCD_PREFIX: ${{ secrets.WITHNY_ETCD_PREFIX }}
          WITHNY_ETCD_USER: ${{ secrets.WITHNY_ETCD_USER }}
          WITHNY_ETCD_PASSWORD: ${{ secrets.WITHNY_ETCD_PASSWORD }}
          WITHNY_ETCD_ADDRESS: ${{ secrets.WITHNY_ETCD_ADDRESS }}
        run: |
          ETCDCTL="/tmp/etcdctl --user=${WITHNY_ETCD_USER} --password=${WITHNY_ETCD_PASSWORD} --endpoints=${WITHNY_ETCD_ADDRESS} --cacert=/tmp/secrets/ca.crt --cert=/tmp/secrets/tls.crt --key=/tmp/secrets/tls.key"
          $ETCDCTL get "${WITHNY_ETCD_PREFIX}/token" --print-value-only > /tmp/withny-dl-test.b64.json
          base64 -d /tmp/withny-dl-test.b64.json > /tmp/withny-dl-test.json

      - name: test
        env:
          WITHNY_ACCESS_TOKEN: ${{ secrets.WITHNY_ACCESS_TOKEN }}
          WITHNY_REFRESH_TOKEN: ${{ secrets.WITHNY_REFRESH_TOKEN }}
        run: go test -v -tags=contract -timeout=30s github.com/Darkness4/withny-dl/withny/api

      - name: Save secret
        if: always()
        env:
          WITHNY_ETCD_PREFIX: ${{ secrets.WITHNY_ETCD_PREFIX }}
          WITHNY_ETCD_USER: ${{ secrets.WITHNY_ETCD_USER }}
          WITHNY_ETCD_PASSWORD: ${{ secrets.WITHNY_ETCD_PASSWORD }}
          WITHNY_ETCD_ADDRESS: ${{ secrets.WITHNY_ETCD_ADDRESS }}
          WITHNY_CACHED_TOKEN: ${{ secrets.WITHNY_CACHED_TOKEN }}
        run: |
          base64 /tmp/withny-dl-test.json > /tmp/withny-dl-test.b64.json
          ETCDCTL="/tmp/etcdctl --user=${WITHNY_ETCD_USER} --password=${WITHNY_ETCD_PASSWORD} --endpoints=${WITHNY_ETCD_ADDRESS} --cacert=/tmp/secrets/ca.crt --cert=/tmp/secrets/tls.crt --key=/tmp/secrets/tls.key"
          count=0
          while ! $ETCDCTL put "${WITHNY_ETCD_PREFIX}/token" < /tmp/withny-dl-test.b64.json; do
            sleep 1
            count=$((count+1))
            if [[ $count -eq 60 ]]; then
              exit 1
            fi
          done
